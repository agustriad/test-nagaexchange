{
    "openapi": "3.0.0",
    "paths": {
        "/ping": {
            "get": {
                "operationId": "PingController_ping",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Ping"
                ]
            }
        },
        "/health": {
            "get": {
                "operationId": "HealthController_check",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Health Check is successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "info": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {},
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "details": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The Health Check is not successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "info": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "details": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                },
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Health"
                ]
            }
        },
        "/user": {
            "post": {
                "operationId": "UsersController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ]
            }
        },
        "/user/{id}": {
            "get": {
                "operationId": "UsersController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Users"
                ]
            }
        },
        "/register": {
            "post": {
                "operationId": "AuthController_register",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAuthenticationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/login": {
            "post": {
                "operationId": "AuthController_login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginAuthenticationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/logout": {
            "post": {
                "operationId": "AuthController_logout",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Auth"
                ]
            }
        },
        "/transaction": {
            "get": {
                "operationId": "TransactionsController_list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Transactions"
                ]
            }
        },
        "/transaction/{id}": {
            "get": {
                "operationId": "TransactionsController_findById",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID Transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Transactions"
                ]
            }
        },
        "/transaction/process": {
            "post": {
                "operationId": "TransactionsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTransactionsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Transactions"
                ]
            }
        },
        "/transaction/process/{id}": {
            "put": {
                "operationId": "TransactionsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID Transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTransactionsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "Transactions"
                ]
            }
        }
    },
    "info": {
        "title": "test_nagaexchange ApiDoc",
        "description": "test_nagaexchange API description",
        "version": "1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "Bearer",
                "bearerFormat": "Bearer",
                "description": "[just text field] Please enter token in following format: Bearer <JWT>",
                "name": "Authorization",
                "type": "http",
                "in": "Header"
            }
        },
        "schemas": {
            "CreateUserDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Agus Triadji",
                        "description": "Full name of the user"
                    },
                    "email": {
                        "type": "string",
                        "example": "agustriadji@email.com",
                        "description": "Valid email address of the user"
                    },
                    "password": {
                        "type": "string",
                        "example": "asdf1234*",
                        "description": "Password used for login."
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "RegisterAuthenticationDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Agus Triadji",
                        "description": "Fulname"
                    },
                    "email": {
                        "type": "string",
                        "example": "agustriadji@email.com",
                        "description": "Email user, must be unique"
                    },
                    "password": {
                        "type": "string",
                        "example": "asdf1234*",
                        "description": "Password min 6 char",
                        "minLength": 6
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ]
            },
            "LoginAuthenticationDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "agustriadji@email.com",
                        "description": "Email registered"
                    },
                    "password": {
                        "type": "string",
                        "example": "asdf1234*",
                        "description": "Password user"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "CreateTransactionsDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "example": "354.50",
                        "description": "Amount"
                    }
                },
                "required": [
                    "amount"
                ]
            },
            "UpdateTransactionsDto": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "example": "354.50",
                        "description": "Amount"
                    }
                },
                "required": [
                    "amount"
                ]
            }
        }
    }
}